name: sysmanage-agent
version: git
summary: System management agent for SysManage (full management, classic confinement)
description: |
  The SysManage agent provides comprehensive system management capabilities
  including:
   * Package inventory and updates
   * System monitoring and metrics
   * Security policy enforcement
   * Certificate management
   * Firewall configuration
   * Remote command execution
   * Integration with SysManage server

  This agent runs as a system service with classic confinement and provides
  full system management capabilities including package updates, firewall
  management, and script execution.

  For read-only monitoring without system modification, use the strict
  confinement version: sysmanage-agent-strict

icon: snap/gui/icon.svg

grade: stable
confinement: classic
base: core22
license: Proprietary
title: SysManage Agent (Classic Confinement)
contact: mailto:bryan@theeverlys.com
website: https://sysmanage.org
issues: https://github.com/bceverly/sysmanage-agent/issues
source-code: https://github.com/bceverly/sysmanage-agent

architectures:
  - build-on: amd64

apps:
  sysmanage-agent:
    command: bin/sysmanage-agent-wrapper
    daemon: simple
    restart-condition: always
    restart-delay: 10s
    plugs:
      - network
      - network-bind
      - system-observe
      - hardware-observe
      - process-control
      - mount-observe
      - firewall-control
      - network-control
      - log-observe

hooks:
  install:
    plugs:
      - network
      - network-bind

parts:
  sysmanage-agent:
    plugin: python
    source: ../..
    source-type: local
    stage-packages:
      - python3-pip
      - python3-venv
    build-packages:
      - python3-dev
      - python3-pip
      - python3-setuptools
      - git
    python-packages:
      - websockets>=13.0
      - pyyaml>=6.0
      - aiohttp>=3.10.0
      - cryptography>=43.0.0
      - sqlalchemy>=2.0.0
      - alembic>=1.13.0
      - prometheus-client>=0.20.0
      - psutil>=6.0.0
    override-build: |
      craftctl default

      # CRAFT_PROJECT_DIR points to installer/ubuntu-snap, we need the repo root
      REPO_ROOT=$CRAFT_PROJECT_DIR/../..

      # Copy application files
      mkdir -p $CRAFT_PART_INSTALL/opt/sysmanage-agent
      cp -r $REPO_ROOT/src $CRAFT_PART_INSTALL/opt/sysmanage-agent/
      cp $REPO_ROOT/main.py $CRAFT_PART_INSTALL/opt/sysmanage-agent/
      cp $REPO_ROOT/alembic.ini $CRAFT_PART_INSTALL/opt/sysmanage-agent/

      # Create directories for runtime data
      mkdir -p $CRAFT_PART_INSTALL/etc/sysmanage-agent
      mkdir -p $CRAFT_PART_INSTALL/var/lib/sysmanage-agent
      mkdir -p $CRAFT_PART_INSTALL/var/log/sysmanage-agent

      # Install config example (for reference)
      cp $REPO_ROOT/installer/ubuntu/sysmanage-agent.yaml.example $CRAFT_PART_INSTALL/etc/sysmanage-agent/

      # Install SBOM (Software Bill of Materials)
      mkdir -p $CRAFT_PART_INSTALL/usr/share/doc/sysmanage-agent/sbom
      if [ -f $REPO_ROOT/sbom/sysmanage-agent-sbom.json ]; then
          cp $REPO_ROOT/sbom/sysmanage-agent-sbom.json $CRAFT_PART_INSTALL/usr/share/doc/sysmanage-agent/sbom/
      fi

      # Create install hook to setup config on first install
      mkdir -p $CRAFT_PART_INSTALL/meta/hooks
      cat > $CRAFT_PART_INSTALL/meta/hooks/install << 'HOOKEOF'
      #!/bin/bash
      # Copy example config to $SNAP_COMMON if it doesn't exist
      if [ ! -f "$SNAP_COMMON/sysmanage-agent.yaml" ]; then
          echo "Creating initial configuration file..."
          cp "$SNAP/etc/sysmanage-agent/sysmanage-agent.yaml.example" "$SNAP_COMMON/sysmanage-agent.yaml"
          echo "Configuration file created at: $SNAP_COMMON/sysmanage-agent.yaml"
          echo "Please edit this file to configure the agent before starting the service."
      fi
      HOOKEOF
      chmod +x $CRAFT_PART_INSTALL/meta/hooks/install

      # Create wrapper script
      mkdir -p $CRAFT_PART_INSTALL/bin
      cat > $CRAFT_PART_INSTALL/bin/sysmanage-agent-wrapper << 'EOF'
      #!/bin/bash
      export PYTHONUNBUFFERED=1
      export PYTHONPATH=$SNAP/lib/python3.13/site-packages:$PYTHONPATH
      export SYSMANAGE_CONFIG=$SNAP_COMMON/sysmanage-agent.yaml
      export SYSMANAGE_DB_PATH=$SNAP_COMMON/agent.db
      export SYSMANAGE_LOG_DIR=/var/log/sysmanage-agent
      export SYSMANAGE_LOG_CONSOLE=1

      # Create directories if they don't exist (classic confinement allows access)
      mkdir -p /var/log/sysmanage-agent
      mkdir -p /var/lib/sysmanage-agent

      cd $SNAP/opt/sysmanage-agent
      exec $SNAP/usr/bin/python3.13 $SNAP/opt/sysmanage-agent/main.py
      EOF
      chmod +x $CRAFT_PART_INSTALL/bin/sysmanage-agent-wrapper
