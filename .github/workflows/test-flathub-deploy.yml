name: Test Flathub Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version string (e.g., 1.0.0)'
        required: true
        type: string

env:
  FLATPAK_ID: org.sysmanage.Agent
  FLATHUB_REPO: flathub/org.sysmanage.Agent

jobs:
  deploy-to-flathub:
    name: Deploy to Flathub
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout sysmanage-agent code
        uses: actions/checkout@v4
        with:
          path: sysmanage-agent

      - name: Checkout Flathub repository
        uses: actions/checkout@v4
        with:
          repository: bceverly/flathub-org.sysmanage.Agent
          token: ${{ secrets.FLATHUB_TOKEN }}
          path: flathub-repo

      - name: Set version
        run: |
          echo "${{ inputs.version }}" > sysmanage-agent/VERSION
          echo "Deploying version: ${{ inputs.version }}"

      - name: Prepare manifest and assets
        run: |
          cd sysmanage-agent

          # Update version in metainfo
          cp installer/flatpak/org.sysmanage.Agent.metainfo.xml /tmp/metainfo.xml
          sed -i "s/VERSION_PLACEHOLDER/${{ inputs.version }}/" /tmp/metainfo.xml

          # Copy updated files to Flathub repository
          cd ../flathub-repo

          # Copy manifest
          cp ../sysmanage-agent/installer/flatpak/org.sysmanage.Agent.yaml .

          # Copy metadata files
          cp /tmp/metainfo.xml .
          cp ../sysmanage-agent/installer/flatpak/org.sysmanage.Agent.desktop .
          cp ../sysmanage-agent/installer/flatpak/icon.svg .

          # Copy service scripts
          cp ../sysmanage-agent/installer/flatpak/sysmanage-service-install.sh .
          cp ../sysmanage-agent/installer/flatpak/sysmanage-service-uninstall.sh .

          # Update manifest to point to the GitHub release tarball instead of local files
          # This is required for Flathub - they need publicly accessible source URLs

          # Create a modified manifest that downloads from GitHub
          cat > org.sysmanage.Agent.yaml.new <<'EOF'
          app-id: org.sysmanage.Agent
          runtime: org.freedesktop.Platform
          runtime-version: '24.08'
          sdk: org.freedesktop.Sdk
          command: sysmanage-agent

          finish-args:
            # Network access for communication with sysmanage server
            - --share=network

            # System monitoring capabilities (read-only)
            # Note: /proc and /etc are reserved by Flatpak and cannot be overridden
            # The agent will have limited access to these through the sandbox
            - --filesystem=/sys:ro
            - --filesystem=/var/log:ro

            # D-Bus access for system monitoring
            - --system-talk-name=org.freedesktop.systemd1
            - --system-talk-name=org.freedesktop.NetworkManager

            # Device access for hardware monitoring
            - --device=all

            # Configuration directory
            - --filesystem=xdg-config/sysmanage:create

            # Database directory
            - --filesystem=xdg-data/sysmanage:create

          modules:
            - name: python3
              buildsystem: simple
              build-commands:
                - ./configure --prefix=/app --enable-shared --with-ensurepip=yes
                - make -j$(nproc)
                - make install
              sources:
                - type: archive
                  url: https://www.python.org/ftp/python/3.12.7/Python-3.12.7.tar.xz
                  sha256: 24887b92e2afd4a2ac602419ad4b596372f67ac9b077190f459aba390faf5550
              cleanup:
                - /bin/2to3*
                - /bin/idle*
                - /bin/pydoc*
                - /share/man

            - name: python-dependencies
              buildsystem: simple
              build-commands:
                - pip3 install --no-build-isolation --prefix=/app *.whl
              sources:
                # Flathub will need pre-downloaded wheels here
                # This will be populated by flatpak-builder-tools
                - generated-sources.json

            - name: sysmanage-agent
              buildsystem: simple
              build-commands:
                # Install the application
                - mkdir -p /app/share/sysmanage-agent
                - cp -r src /app/share/sysmanage-agent/
                - cp main.py /app/share/sysmanage-agent/
                - cp alembic.ini /app/share/sysmanage-agent/
                - cp requirements.txt /app/share/sysmanage-agent/

                # Install service scripts
                - mkdir -p /app/share/sysmanage-agent/scripts
                - cp sysmanage-service-install.sh /app/share/sysmanage-agent/scripts/
                - cp sysmanage-service-uninstall.sh /app/share/sysmanage-agent/scripts/
                - chmod +x /app/share/sysmanage-agent/scripts/*.sh

                # Create launcher script with config directory setup
                - |
                  cat > /app/bin/sysmanage-agent <<'LAUNCHEREOF'
                  #!/bin/sh

                  # Create config directory if it doesn't exist
                  CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.var/app/org.sysmanage.Agent/config}/sysmanage"
                  mkdir -p "$CONFIG_DIR"

                  # Create default config if it doesn't exist
                  CONFIG_FILE="$CONFIG_DIR/sysmanage-agent.yaml"
                  if [ ! -f "$CONFIG_FILE" ]; then
                      cat > "$CONFIG_FILE" <<'CONFIGEOF'
                  # SysManage Agent Configuration

                  server:
                    hostname: "localhost"
                    port: 8080
                    use_https: false
                    verify_ssl: false

                  client:
                    registration_retry_interval: 30
                    max_registration_retries: 10
                    update_check_interval: 3600

                  i18n:
                    language: "en"

                  logging:
                    level: "INFO"

                  websocket:
                    auto_reconnect: true
                    reconnect_interval: 5
                    ping_interval: 60

                  database:
                    path: "agent.db"
                    auto_migrate: true

                  script_execution:
                    enabled: false
                    timeout: 300
                    max_concurrent: 3
                    allowed_shells:
                      - "bash"
                      - "sh"
                  CONFIGEOF
                      echo "Created default configuration at: $CONFIG_FILE"
                      echo "Please edit this file to configure your SysManage server connection"
                  fi

                  # Set environment variables
                  export SYSMANAGE_CONFIG="$CONFIG_FILE"

                  # Debug: Log environment setup
                  echo "[FLATPAK LAUNCHER] SYSMANAGE_CONFIG=$SYSMANAGE_CONFIG" >&2
                  echo "[FLATPAK LAUNCHER] Config file exists: $(test -f "$CONFIG_FILE" && echo "YES" || echo "NO")" >&2

                  # Set log directory to XDG data home (writable in Flatpak)
                  LOG_DIR="${XDG_DATA_HOME:-$HOME/.var/app/org.sysmanage.Agent/data}/sysmanage/logs"
                  mkdir -p "$LOG_DIR"
                  export SYSMANAGE_LOG_DIR="$LOG_DIR"

                  # Set database path to XDG data home (writable in Flatpak)
                  DATA_DIR="${XDG_DATA_HOME:-$HOME/.var/app/org.sysmanage.Agent/data}/sysmanage"
                  mkdir -p "$DATA_DIR"
                  export SYSMANAGE_DB_PATH="$DATA_DIR/agent.db"

                  # Set Python path to include the agent directory
                  export PYTHONPATH="/app/share/sysmanage-agent:$PYTHONPATH"

                  cd /app/share/sysmanage-agent
                  exec python3 main.py "$@"
                  LAUNCHEREOF
                - chmod +x /app/bin/sysmanage-agent

                # Install icon
                - install -Dm644 icon.svg /app/share/icons/hicolor/scalable/apps/org.sysmanage.Agent.svg

                # Install metadata
                - install -Dm644 org.sysmanage.Agent.metainfo.xml /app/share/metainfo/org.sysmanage.Agent.metainfo.xml
                - install -Dm644 org.sysmanage.Agent.desktop /app/share/applications/org.sysmanage.Agent.desktop

              sources:
                - type: archive
                  url: https://github.com/${{ github.repository }}/archive/refs/tags/v${{ inputs.version }}.tar.gz
                  sha256: REPLACE_WITH_ACTUAL_SHA256
                - type: file
                  path: icon.svg
                - type: file
                  path: org.sysmanage.Agent.metainfo.xml
                - type: file
                  path: org.sysmanage.Agent.desktop
                - type: file
                  path: sysmanage-service-install.sh
                - type: file
                  path: sysmanage-service-uninstall.sh
          EOF

          # Note: The manifest above needs manual adjustment for:
          # 1. The SHA256 hash of the release tarball
          # 2. The generated-sources.json for Python dependencies

          echo "Manifest prepared but needs manual completion for Flathub"

      - name: Generate Python dependencies manifest
        run: |
          cd flathub-repo

          # Install flatpak-builder-tools
          git clone https://github.com/flatpak/flatpak-builder-tools.git /tmp/flatpak-builder-tools

          # Generate sources for pip dependencies
          python3 /tmp/flatpak-builder-tools/pip/flatpak-pip-generator \
            --runtime='org.freedesktop.Sdk//24.08' \
            --requirements-file=../sysmanage-agent/requirements.txt \
            --output generated-sources

          echo "Generated Python dependencies manifest"

      - name: Commit and push to Flathub repository
        run: |
          cd flathub-repo

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          git add .
          git commit -m "Update to version ${{ inputs.version }}" || echo "No changes to commit"
          git push origin master

          echo "✅ Pushed to Flathub repository"
          echo "Flathub will now build and publish the app automatically"

      - name: Create submission summary
        run: |
          cat > summary.md <<EOF
          # Flathub Deployment Summary

          ## Version
          ${{ inputs.version }}

          ## Repository
          https://github.com/${{ env.FLATHUB_REPO }}

          ## Status
          ✅ Manifest pushed to Flathub repository

          ## Next Steps

          Flathub will now:
          1. Detect the new commit
          2. Build the Flatpak on their servers
          3. Publish to Flathub if the build succeeds

          ## Monitor Build Status
          Check build status at: https://buildbot.flathub.org/

          ## Installation (after published)
          \`\`\`bash
          flatpak install flathub org.sysmanage.Agent
          \`\`\`

          ## Important Notes
          - First-time submissions require manual approval from Flathub maintainers
          - Updates are automatic once approved
          - Build logs are available at https://buildbot.flathub.org/
          EOF

          cat summary.md

      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: deployment-summary
          path: summary.md
          retention-days: 30
