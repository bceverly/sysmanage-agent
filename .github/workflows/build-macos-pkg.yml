name: Build macOS Package

on:
  # Trigger on version tags (e.g., v1.0.0, v2.1.3)
  push:
    tags:
      - 'v*.*.*'

  # Manual trigger with version input
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write  # Needed for creating releases

jobs:
  # Wait for CI tests to pass before building
  wait-for-tests:
    name: Wait for CI Tests
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI workflow
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.sha }}
          check-name: 'Backend Tests (Python 3.10)'  # Just check one of the matrix tests
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30

  build-pkg:
    name: Build .pkg Package
    runs-on: macos-latest
    needs: wait-for-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Determine version
        id: version
        env:
          EVENT_NAME: ${{ github.event_name }}
          INPUT_VERSION: ${{ github.event.inputs.version }}
          REF: ${{ github.ref }}
        run: |
          if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            # Strip 'v' prefix if present in manual input
            VERSION="${INPUT_VERSION#v}"
          else
            # Extract version from tag (remove 'v' prefix)
            VERSION="${REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Install build dependencies
        run: |
          # Xcode Command Line Tools should already be available on GitHub runners
          # Verify pkgbuild and productbuild are available
          which pkgbuild
          which productbuild
          echo "âœ“ macOS packaging tools available"

      - name: Update version in Makefile
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          # Update version in Makefile if there's a VERSION variable
          if grep -q "^VERSION.*=" Makefile; then
            sed -i '' "s/^VERSION.*=.*/VERSION = $VERSION/" Makefile
          fi

      - name: Build macOS .pkg installer
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          # Build the installer using the Makefile
          make installer

          # Verify the package was created
          PKG_FILE="installer/dist/sysmanage-agent-${VERSION}-macos.pkg"
          if [ ! -f "$PKG_FILE" ]; then
            echo "Error: Package file not found at $PKG_FILE"
            ls -la installer/dist/
            exit 1
          fi

          echo "Package built successfully: $PKG_FILE"

      - name: Verify package structure
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          PKG_FILE="installer/dist/sysmanage-agent-${VERSION}-macos.pkg"

          echo "Package information:"
          pkgutil --payload-files "$PKG_FILE" | head -20

          echo ""
          echo "Package size: $(du -h "$PKG_FILE" | cut -f1)"

      - name: Generate package information
        id: package_info
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          PKG_FILE="installer/dist/sysmanage-agent-${VERSION}-macos.pkg"
          echo "pkg_file=sysmanage-agent-${VERSION}-macos.pkg" >> $GITHUB_OUTPUT

          # Generate SHA256 checksum
          shasum -a 256 "$PKG_FILE" > "$PKG_FILE.sha256"

          echo "Package built: $PKG_FILE"
          echo "Size: $(du -h "$PKG_FILE" | cut -f1)"
          echo "SHA256: $(cat "$PKG_FILE.sha256")"

      - name: Upload .pkg as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sysmanage-agent-macos-pkg
          path: |
            installer/dist/sysmanage-agent-*.pkg
            installer/dist/sysmanage-agent-*.pkg.sha256

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            installer/dist/sysmanage-agent-*.pkg
            installer/dist/sysmanage-agent-*.pkg.sha256
          body: |
            # SysManage Agent v${{ steps.version.outputs.version }}

            ## Installation on macOS

            ```bash
            # Download the .pkg file
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ steps.package_info.outputs.pkg_file }}

            # Install the package
            sudo installer -pkg ${{ steps.package_info.outputs.pkg_file }} -target /

            # Configure the agent
            sudo nano /etc/sysmanage-agent.yaml

            # Start the service
            sudo launchctl start com.sysmanage.agent
            ```

            ## What's Included

            - System management agent service
            - Automatic startup with LaunchDaemon
            - ARM64 native binaries for Apple Silicon
            - Python 3.9+ compatible
            - Example configuration file

            ## Supported Platforms

            - macOS 11.0 (Big Sur) or later
            - Apple Silicon (ARM64) native
            - Intel (x86_64) compatible

            ## Service Management

            ```bash
            # Check service status
            sudo launchctl print system/com.sysmanage.agent

            # Stop the service
            sudo launchctl stop com.sysmanage.agent

            # View logs
            tail -f /var/log/sysmanage-agent.log
            tail -f /var/log/sysmanage-agent-error.log
            ```

            ## Checksum Verification

            ```bash
            shasum -a 256 -c ${{ steps.package_info.outputs.pkg_file }}.sha256
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
