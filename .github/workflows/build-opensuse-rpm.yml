name: Build openSUSE/SLES Package

on:
  # Trigger on version tags (e.g., v1.0.0, v2.1.3)
  push:
    tags:
      - 'v*.*.*'

  # Manual trigger with version input
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string
      target:
        description: 'Target distribution (opensuse-leap, opensuse-tumbleweed, sles)'
        required: true
        type: choice
        options:
          - opensuse-leap
          - opensuse-tumbleweed
          - sles
        default: 'opensuse-leap'

permissions:
  contents: write  # Needed for creating releases

jobs:
  # Wait for CI tests to pass before building
  wait-for-tests:
    name: Wait for CI Tests
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI workflow
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.sha }}
          check-name: 'Backend Tests (Python 3.10)'  # Just check one of the matrix tests
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30

  build-rpm:
    name: Build .rpm Package for ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: wait-for-tests
    strategy:
      matrix:
        target:
          - opensuse-leap
          - opensuse-tumbleweed
          - sles

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install RPM build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm createrepo-c python3-dev python3-pip python3-setuptools systemd

      - name: Determine version
        id: version
        env:
          EVENT_NAME: ${{ github.event_name }}
          INPUT_VERSION: ${{ github.event.inputs.version }}
          REF: ${{ github.ref }}
        run: |
          if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            # Strip 'v' prefix if present in manual input
            VERSION="${INPUT_VERSION#v}"
          else
            # Extract version from tag (remove 'v' prefix)
            VERSION="${REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Set up RPM build tree
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          # Ensure we're in the right directory
          cd "$GITHUB_WORKSPACE"

          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}

          # Create source tarball
          TAR_NAME="sysmanage-agent-$VERSION"
          TAR_DIR="/tmp/$TAR_NAME"
          mkdir -p "$TAR_DIR"

          # Copy source files
          rsync -a --exclude='htmlcov' --exclude='__pycache__' --exclude='*.pyc' --exclude='.pytest_cache' \
            src/ "$TAR_DIR/src/"
          cp main.py "$TAR_DIR/"
          cp alembic.ini "$TAR_DIR/"
          cp requirements-prod.txt "$TAR_DIR/"
          cp README.md "$TAR_DIR/" || touch "$TAR_DIR/README.md"
          cp LICENSE "$TAR_DIR/" || touch "$TAR_DIR/LICENSE"

          # Copy installer files for openSUSE/SLES
          mkdir -p "$TAR_DIR/installer/opensuse"
          cp installer/opensuse/*.service "$TAR_DIR/installer/opensuse/" || true
          cp installer/opensuse/*.sudoers "$TAR_DIR/installer/opensuse/" || true
          cp installer/opensuse/*.example "$TAR_DIR/installer/opensuse/" || true
          cp installer/opensuse/sysmanage-agent.spec "$TAR_DIR/installer/opensuse/"

          # Create tarball
          cd /tmp
          tar czf ~/rpmbuild/SOURCES/sysmanage-agent-$VERSION.tar.gz "$TAR_NAME/"

          echo "Source tarball created"

      - name: Update spec file with version
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          # Extract spec file from source tarball
          tar -xzf ~/rpmbuild/SOURCES/sysmanage-agent-$VERSION.tar.gz -C /tmp \
            sysmanage-agent-$VERSION/installer/opensuse/sysmanage-agent.spec
          cp /tmp/sysmanage-agent-$VERSION/installer/opensuse/sysmanage-agent.spec ~/rpmbuild/SPECS/

          DATE=$(date "+%a %b %d %Y")

          # Update version and changelog date
          sed -i "s/^Version:.*/Version:        $VERSION/" ~/rpmbuild/SPECS/sysmanage-agent.spec
          sed -i "s/^\\* Mon Oct 14 2024/\\* $DATE/" ~/rpmbuild/SPECS/sysmanage-agent.spec

          echo "Spec file updated to version $VERSION"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build RPM package
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          # Use --nodeps to skip dependency checking since we're building on Ubuntu
          rpmbuild -bb --nodeps ~/rpmbuild/SPECS/sysmanage-agent.spec

          # Find the built RPM
          RPM_FILE=$(find ~/rpmbuild/RPMS -name "sysmanage-agent-$VERSION-*.rpm" | head -1)

          if [ -z "$RPM_FILE" ]; then
            echo "ERROR: RPM package not found!"
            exit 1
          fi

          # Copy to workspace
          cp "$RPM_FILE" "$GITHUB_WORKSPACE/"

          echo "RPM package built: $(basename $RPM_FILE)"

      - name: Generate package information
        id: package_info
        env:
          TARGET: ${{ matrix.target }}
        run: |
          RPM_FILE=$(ls sysmanage-agent-*.rpm | head -1)
          echo "rpm_file=$RPM_FILE" >> $GITHUB_OUTPUT
          echo "target=$TARGET" >> $GITHUB_OUTPUT

          # Get package info
          rpm -qip "$RPM_FILE"
          rpm -qlp "$RPM_FILE"

          # Generate SHA256 checksum
          sha256sum "$RPM_FILE" > "$RPM_FILE.sha256"

          echo "Package built: $RPM_FILE"
          echo "Target: $TARGET"
          echo "Size: $(du -h "$RPM_FILE" | cut -f1)"

      - name: Upload .rpm as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sysmanage-agent-rpm-${{ matrix.target }}
          path: |
            sysmanage-agent*.rpm
            sysmanage-agent*.rpm.sha256

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            sysmanage-agent*.rpm
            sysmanage-agent*.rpm.sha256
          body: |
            # SysManage Agent v${{ steps.version.outputs.version }} - RPM Package (${{ matrix.target }})

            ## Installation on ${{ matrix.target }}

            ```bash
            # Download the .rpm file
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ steps.package_info.outputs.rpm_file }}

            # Install the package
            sudo zypper install ./${{ steps.package_info.outputs.rpm_file }}
            # or
            sudo rpm -ivh ./${{ steps.package_info.outputs.rpm_file }}

            # Configure the agent
            sudo nano /etc/sysmanage-agent.yaml

            # Restart the service
            sudo systemctl restart sysmanage-agent
            ```

            ## What's Included

            - System management agent service
            - Automatic startup with systemd
            - Sudoers configuration for system management
            - Example configuration file

            ## Supported Platforms

            - openSUSE Leap 15.x
            - openSUSE Tumbleweed
            - SUSE Linux Enterprise Server 15

            ## Checksum Verification

            ```bash
            sha256sum -c ${{ steps.package_info.outputs.rpm_file }}.sha256
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update RPM repository in sysmanage-docs
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        env:
          DOCS_REPO_TOKEN: ${{ secrets.DOCS_REPO_TOKEN }}
          VERSION: ${{ steps.version.outputs.version }}
          RPM_FILE: ${{ steps.package_info.outputs.rpm_file }}
          TARGET: ${{ matrix.target }}
        run: |
          echo "=========================================="
          echo "Updating RPM Repository in sysmanage-docs"
          echo "=========================================="

          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Clone sysmanage-docs repository
          echo "üì¶ Cloning sysmanage-docs repository..."
          git clone https://x-access-token:${DOCS_REPO_TOKEN}@github.com/bceverly/sysmanage-docs.git /tmp/sysmanage-docs

          # Copy .rpm file to temporary location
          echo "üìã Copying .rpm file..."
          cp "$RPM_FILE" /tmp/

          # Determine friendly name for commit message
          case "$TARGET" in
            opensuse-leap)
              FRIENDLY_NAME="openSUSE Leap 15.x"
              ;;
            opensuse-tumbleweed)
              FRIENDLY_NAME="openSUSE Tumbleweed"
              ;;
            sles)
              FRIENDLY_NAME="SUSE Linux Enterprise Server 15"
              ;;
            *)
              FRIENDLY_NAME="$TARGET"
              ;;
          esac

          echo "üìç Target: $FRIENDLY_NAME ($TARGET)"

          # Run update-repo.sh script
          echo "üîÑ Updating RPM repository..."
          cd /tmp/sysmanage-docs/repo/rpm
          chmod +x update-repo.sh
          ./update-repo.sh "/tmp/$RPM_FILE" "$TARGET"

          # Commit and push changes
          echo "üíæ Committing changes..."
          cd /tmp/sysmanage-docs
          git add repo/
          git commit -m "Add sysmanage-agent version $VERSION to $FRIENDLY_NAME RPM repository

          Automatically updated by GitHub Actions from sysmanage-agent release ${{ github.ref_name }}.

          - Package: $RPM_FILE
          - Target: $TARGET ($FRIENDLY_NAME)
          - Release: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}"

          echo "üöÄ Pushing to sysmanage-docs..."
          git push

          echo "‚úÖ RPM repository updated successfully!"
          echo "üìç Changes will be live on GitHub Pages in 2-5 minutes"

          # Show repository URL based on target
          case "$TARGET" in
            opensuse-leap)
              echo "üîó Repository: https://bceverly.github.io/sysmanage-docs/repo/rpm/opensuse-leap/15/x86_64"
              ;;
            opensuse-tumbleweed)
              echo "üîó Repository: https://bceverly.github.io/sysmanage-docs/repo/rpm/opensuse-tumbleweed/x86_64"
              ;;
            sles)
              echo "üîó Repository: https://bceverly.github.io/sysmanage-docs/repo/rpm/sles/15/x86_64"
              ;;
          esac
