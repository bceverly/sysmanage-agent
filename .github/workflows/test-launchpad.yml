name: Test Launchpad PPA Upload

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-ppa-upload:
    name: Test PPA Upload for Noble
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          VERSION="${LATEST_TAG#v}"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Latest tag: $LATEST_TAG"
          echo "Version: $VERSION"

      - name: Install packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y devscripts debhelper dh-python python3-all python3-setuptools dput-ng gnupg

      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.LAUNCHPAD_GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.LAUNCHPAD_GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "allow-preset-passphrase" >> ~/.gnupg/gpg-agent.conf
          gpg-connect-agent reloadagent /bye

          # Get the key ID
          GPG_KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d'/' -f2 | head -1)
          echo "GPG_KEY_ID=$GPG_KEY_ID" >> $GITHUB_ENV
          echo "Using GPG key: $GPG_KEY_ID"

      - name: Configure dput for Launchpad
        run: |
          mkdir -p ~/.dput.d/profiles
          cat > ~/.dput.d/profiles/launchpad.json << 'EOF'
          {
            "launchpad": {
              "fqdn": "ppa.launchpad.net",
              "incoming": "~bceverly/sysmanage-agent/",
              "method": "ftp",
              "allow_unsigned_uploads": false
            }
          }
          EOF

      - name: Build and upload for Noble (24.04) only
        env:
          VERSION: ${{ steps.get_tag.outputs.version }}
          DEBFULLNAME: "Bryan Everly"
          DEBEMAIL: "bryan@theeverlys.com"
        run: |
          RELEASE="noble"

          echo "=========================================="
          echo "Building source package for Ubuntu $RELEASE (24.04)"
          echo "Version: $VERSION"
          echo "=========================================="

          # Create working directory
          WORK_DIR="/tmp/sysmanage-agent-$RELEASE"
          rm -rf "$WORK_DIR"
          mkdir -p "$WORK_DIR"

          # Copy source to working directory
          cp -r . "$WORK_DIR/"
          cd "$WORK_DIR"

          # Copy debian directory
          if [ -d "installer/ubuntu/debian" ]; then
            cp -r installer/ubuntu/debian .
          else
            echo "Error: debian directory not found"
            exit 1
          fi

          # Update changelog
          dch -v "${VERSION}+ppa1~${RELEASE}1" -D "$RELEASE" "New upstream release ${VERSION}"

          # Build source package (unsigned)
          debuild -S -sa -us -uc

          # Move to /tmp where files are
          cd ..

          echo ""
          echo "Files created in /tmp:"
          ls -lah sysmanage-agent_${VERSION}* 2>/dev/null || ls -lah sysmanage-agent_*

          echo ""
          echo "Current directory: $(pwd)"

          echo ""
          echo "GPG_KEY_ID: $GPG_KEY_ID"
          if [ -z "$GPG_KEY_ID" ]; then
            echo "ERROR: GPG_KEY_ID is empty!"
            exit 1
          fi

          echo ""
          echo "Contents of .changes file:"
          cat sysmanage-agent_${VERSION}+ppa1~${RELEASE}1_source.changes

          echo ""
          echo "Attempting to sign..."
          debsign -k"$GPG_KEY_ID" sysmanage-agent_${VERSION}+ppa1~${RELEASE}1_source.changes

          echo ""
          echo "Upload to Launchpad PPA..."
          dput launchpad "sysmanage-agent_${VERSION}+ppa1~${RELEASE}1_source.changes"

          echo ""
          echo "SUCCESS! Uploaded to Launchpad PPA for $RELEASE"
